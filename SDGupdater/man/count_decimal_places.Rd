% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_decimal_places.R
\name{count_decimal_places}
\alias{count_decimal_places}
\alias{count_decimal_places_numerically}
\alias{count_decimal_places_as_string}
\title{Count number of decimal places}
\usage{
count_decimal_places(value, default = 3)

count_decimal_places_numerically(value)

count_decimal_places_as_string(value)
}
\arguments{
\item{value}{Numeric vector.}

\item{default}{The default number to be returned if the count is
unsuccessful. Optional (defaults to 3).}
}
\value{
Numeric vector.
}
\description{
Uses two different methods for calculating the number of decimal places, and
returns the modal value. NA's in value are ignored. If there is more than one
modal value, the maximum is returned.
}
\details{
For large numbers, neither counting method is reliable, so the count of these
numbers is given as NA. Where the two methods disagree, count is recorded as
NA. If NA is the modal value a default value is returned and a warning is
given.

The mode is used to remove unusual counts, and therefore get the value most
likely to be correct.

count_decimal_places_numerically counts the number of decimal places used for
a numeric variable. This should be used with caution as 'R stores numbers
internally in a binary representation and the exact conversion of this
representation to a decimal number may not match the exact value of the
decimal representation of the original number'.

count_decimal_places_as_string counts the number of decimal places used for a
numeric variable after converting it to a character string. This should be
used with caution as the way R converts large numbers or numbers with lots of
decimal places can cause the incorrect value to be returned. Some such cases
that are known to be incorrect are returned as NA (e.g 1.23e+20 would return
NA)
}
\examples{
test_dat <- c(1.1, 1.234)
count_decimal_places(test_dat) # 3dp
count_decimal_places_numerically(test_dat) # returns correct values
count_decimal_places_as_string(test_dat) # returns correct values

test_dat2 <- c(12345678891011.234)
count_decimal_places(test_dat2) # character count gives 1dp, while numeric count correctly gives 3dp
count_decimal_places_numerically(test_dat2) # returns correct values
count_decimal_places_as_string(test_dat2) # returns 1 because as.character() truncates number.

test_dat3 <- c(12.12345678901234567)
count_decimal_places(test_dat3) # character count gives 13, numeric count gives 15. Both are incorrect.
count_decimal_places_numerically(test_dat3) # returns 15, where the correct figure is 17.
count_decimal_places_as_string(test_dat3) # returns 13, where the correct figure is 17 because as.character() truncates number.

test_dat4 <- c(123456789012345678.9012345678901234567890)
count_decimal_places_as_string(test_dat4) # returns 0 because as.character() truncates number.

test_dat5 <- c(123456789012345678.234)
count_decimal_places_as_string(test_dat5) # returns 18 because of conversion to 1.234568e+18

}
\seealso{
Thread on counting decimal places:
https://stat.ethz.ch/pipermail/r-help/2012-July/317676.html Rationale for
setting default number of decimal places to 3:
https://www.bmj.com/content/350/bmj.h1845
}
